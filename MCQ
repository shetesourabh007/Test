1. B. 10
2. D. Compilation fails due to an error on line 5.
3. A. Compilation fails.
4. C.if(b instanceof Feline) System.out.print("3 ");
5. A. 3
6. E. 3 4 5
7. D,G
8. A. null
9. B, D
10. D. s c r
11. B,C
12. A,B,C
13. A,D,E
14. E. An exception is thrown at runtime.
15. D. 2 -2
16. B,C
17. A. Compilation fails.
18. C. c c 1 1
19. C,E
20. D,F
21. E. Compilation fails.
22. E. Regardless of which fragment is inserted, output continues after the Error is thrown.
23. D,F
24. A,B,C
25. A,B
26. A,B
27. B,F
28. C. The program’s minimum execution time is about 9 seconds.
29. D,F
30. D Compilation fails due to an error on line 6. 
31. E. Compilation fails due to an error on line 7. 
32. A,C,F
33. A,C
34. C. 3
35. E. Compilation fails due to an error on line 8. 


************ Programs **************

//3.  Given an array of ints, return true if the sequence of numbers 1, 2, 3 appears in the array somewhere.

array123([1, 1, 2, 3, 1]) → true
array123([1, 1, 2, 4, 1]) → false
array123([1, 1, 2, 1, 2, 3]) → true

package test.codes;

public class Test {

	

	public boolean array123(int[] nums) {
		System.out.println("Inside");
		// Note: iterate < length-2, so can use i+1 and i+2 in the loop
		for (int i = 0; i < (nums.length - 2); i++) {
			if (nums[i] == 1 && nums[i + 1] == 2 && nums[i + 2] == 3)
				return true;
		}
		return false;

	}

	public static void main(String[] args) {
		Test t = new Jail();
		public int[] nums= ([1, 1, 2, 3, 1]);
		t.array123(nums []);
	}
}
.

//2 Debbie is a statistician who deals with numbers stored in files. She would like a program to help her calculate the mean, median and mode of the numbers in a given file.

Write a program that takes as an input the fully qualified path to a file containing the input data.

The program should prompt for one of the following execution options and perform the corresponding action:

– Calculate the mean
- Calculate the median
- Calculate the mode

Answer-

package test.codes;

import java.util.Scanner;

class Jail {

	public void mean()

	{

		int n;
		double res = 0;

		Scanner sc = new Scanner(System.in);

		System.out.println("enter how many numbers to cal  mean");

		n = sc.nextInt();

		int a[] = new int[n];

		System.out.println("enter   " + n + "  numbers");

		for (int i = 0; i < n; i++)
			a[i] = sc.nextInt();

		for (int i = 0; i < n; i++)
			res = res + a[i];

		System.out.println("Mean=" + res / n);

	}
	
	public static int mode(int a[]){
		  int maxValue=0, maxCount=0;   
		  for (int i = 0; i < a.length; ++i){
		    int count = 0;
		    for (int j = 0; j < a.length; ++j){
		      if (a[j] == a[i]) ++count;
		    }
		    if (count > maxCount){
		      maxCount = count;
		      maxValue = a[i];
		    }
		  }
		  return maxValue;
		}
	
	public static double median(double[] m) {
	    int middle = m.length/2;
	    if (m.length%2 == 1) {
	        return m[middle];
	    } else {
	        return (m[middle-1] + m[middle]) / 2.0;
	    }
	}
	}

